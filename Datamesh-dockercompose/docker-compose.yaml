version: "3.7"
services:
  trino:
    hostname: trino
    image: "trinodb/trino:latest"
    ports:
      - "8080:8080"
    volumes:
      - D:\Mariselvam\Datamesh-dockercompose\trino-etc:/etc/trino:ro
    networks:
      - trino-network

  postgres:
    hostname: postgres
    image: postgres:14.1-alpine
    ports:
      - 5433:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: Surendhar3298
    volumes:
      - D:\Mariselvam\Datamesh-dockercompose\pgdata:/var/lib/postgresql/data
    networks:
      - trino-network

  minio:
    hostname: minio
    image: "quay.io/minio/minio:latest"
    container_name: minio
    privileged: true
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - D:\Mariselvam\Datamesh-dockercompose\minio-data:/data
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server /data --console-address ":9001"
    networks:
      - trino-network

  hive-metastore:
    hostname: hive-metastore
    image: quay.io/zagaos/hive-metastore
    ports:
      - "9083:9083"
    environment:
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_DB: postgres
      DATABASE_USER: postgres
      DATABASE_PASSWORD: Surendhar3298
      AWS_ACCESS_KEY_ID: minio_access_key
      AWS_SECRET_ACCESS_KEY: minio_secret_key
      S3_ENDPOINT_URL: http://minio:9000
      S3_BUCKET: datalake
      S3_PREFIX: observability
    networks:
      - trino-network

networks:
  trino-network:
    driver: bridge
